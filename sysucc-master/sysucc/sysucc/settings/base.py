"""
Django settings for sysucc project.

Generated by 'django-admin startproject' using Django 2.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

from django.utils.translation import ugettext_lazy as _


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ''

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'cccga',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sysucc.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
            ],
        },
    },
]

WSGI_APPLICATION = 'sysucc.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGES = (
    ('en-us', _('English')),
    # ('zh-hans', _('Chinese')),
)

LANGUAGE_CODE = 'en-us'
# LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'UTC'
# TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'cccga/locale'),
)

USE_L10N = True

USE_TZ = True
# USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# STATIC_URL是静态文件URL，设置后可以通过使用{% static 'img/xxx.jpg' %}方式直接访问/static/文件夹里的静态文件。
STATIC_URL = '/static/'

#####################################################################################################
# 当运行 python manage.py collectstatic 的时候
# STATIC_ROOT文件夹 是用来将STATICFILES_DIRS中所有文件夹中的文件，以及各app下的static中的文件都复制过来
# 把静态文件集中一起的目的是为了更方便地通过Apache或Nginx部署。
STATIC_ROOT = os.path.join(BASE_DIR, 'collected_static')
# 有一些文件夹中也有静态文件，可是文件夹并不是以static命名也不在static子目录里
# 此时你也希望搜集使用那些静态文件，这时我们就要设置静态文件目录STATICFILES_DIRS值了
# 可以用来存放项目中公用的静态文件，里面不能包含 STATIC_ROOT
# 如果不想用 STATICFILES_DIRS 可以不用，都放在 app 里的 static 中也可以
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'common_static')]

# media
MEDIA_URL = '/media/'

IMPORT_EXPORT_USE_TRANSACTIONS = True

# DATA_UPLOAD_MAX_NUMBER_FIELDS = 10240 # higher than the count of fields, default is 1000

# 邮件
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.exmail.qq.com'  # 如果是 163 改成 smtp.163.com
# EMAIL_PORT = 25
EMAIL_PORT = 465
EMAIL_HOST_USER = ''  # 发送者用户名（邮箱地址）
EMAIL_HOST_PASSWORD = ''
# EMAIL_USE_TLS = True
EMAIL_USE_SSL = True  # EMAIL_USE_SSL 和 EMAIL_USE_TLS 是互斥的，即只能有一个为 True
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER  # DEFAULT_FROM_EMAIL = 'tuweizhong <tuweizhong@163.com>'
EMAIL_SUBJECT_PREFIX = '[Django]'

# 管理员邮箱
ADMINS = (
    ('admin', 'datadelivery@haplox.com'),
)
